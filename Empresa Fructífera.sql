CREATE TABLE CIUDAD (
   idCiudad INT PRIMARY KEY,
   Nombre_Ciudad VARCHAR(45)
);

CREATE TABLE COMUNA (
   idComuna INT PRIMARY KEY,
   Nombre_Comuna VARCHAR(45),
   FK_idCiudad INT,
   CONSTRAINT FKCC8 FOREIGN KEY (FK_idCiudad) REFERENCES CIUDAD (idCiudad)
);

CREATE TABLE PLANTA (
   idPlanta INT PRIMARY KEY,
   Nombre_Planta VARCHAR(45),
   FK_idComuna INT,
   CONSTRAINT FKPC8 FOREIGN KEY (FK_idComuna) REFERENCES COMUNA (idComuna)
);

CREATE TABLE EMPLEADO (
   idEmpleado INT PRIMARY KEY,
   Datos_Empleado VARCHAR(50),
   FK_idPlanta INT,
   CONSTRAINT FKEP4 FOREIGN KEY (FK_idPlanta) REFERENCES PLANTA (idPlanta)
);

CREATE TABLE PERSONA (
  idPersona INT PRIMARY KEY,
  Nombre_Persona VARCHAR(30),
  Apellido_Paterno_Persona VARCHAR(30),
  Apellido_Materno_Persona VARCHAR(30),
  Direccion_Persona VARCHAR(55),
  Email_Persona VARCHAR(60),
  Profesion_Persona VARCHAR(30)
);

CREATE TABLE CLIENTE (
   Rut_Cliente INT PRIMARY KEY,
   Datos_Cliente VARCHAR(50)
);

CREATE TABLE CAMION (
   idPatente INT PRIMARY KEY,
   Nombre_Camion VARCHAR(30),
   Fecha_Camion TIMESTAMP,
   Capacidad_Maxima VARCHAR(30),
   Rendimiento_Camion VARCHAR(20),
   Conductor_Asociado VARCHAR(30),
   FK_idPlanta INT,
   CONSTRAINT FKCP9 FOREIGN KEY (FK_idPlanta) REFERENCES PLANTA (idPlanta)
);

CREATE TABLE SUPERVISOR_LINEA (
   idSupervisor_Linea INT PRIMARY KEY,
   FK_idEmpleado INT,
   CONSTRAINT FKSL_E FOREIGN KEY (FK_idEmpleado) REFERENCES EMPLEADO (idEmpleado)
);

CREATE TABLE CALIDAD_FRUTA (
   idCalidad_Fruta INT PRIMARY KEY,
   Tipo_Calidad VARCHAR(45)
);

CREATE TABLE STOCK_FRUTA (
   idStock_Fruta INT PRIMARY KEY,
   Cantidad_Toneladas INT
);

CREATE TABLE RECOLECTOR (
   idRecolector INT PRIMARY KEY,
   Datos_Recolector VARCHAR(30),
   FK_idEmpleado INT,
   CONSTRAINT FKRC5 FOREIGN KEY (FK_idEmpleado) REFERENCES EMPLEADO (idEmpleado)
);

CREATE TABLE SUPERVISOR_CALIDAD (
   idSupervisor_Calidad INT PRIMARY KEY,
   FK_idEmpleado INT,
   CONSTRAINT FKSC_E FOREIGN KEY (FK_idEmpleado) REFERENCES EMPLEADO (idEmpleado)
);

CREATE TABLE PEDIDO (
   idPedido INT PRIMARY KEY,
   Descripcion_Pedido VARCHAR(45),
   FK_Rut_Cliente INT,
   FK_idSupervisor_Linea INT,
   CONSTRAINT FKPRC FOREIGN KEY (FK_Rut_Cliente) REFERENCES CLIENTE (Rut_Cliente),
   CONSTRAINT FKPSL FOREIGN KEY (FK_idSupervisor_Linea) REFERENCES SUPERVISOR_LINEA (idSupervisor_Linea)
);

CREATE TABLE RUTA_ENTREGA (
   idRuta_Entrega INT PRIMARY KEY,
   Descripcion_Ruta VARCHAR(60),
   FK_idSupervisor_Linea INT,
   FK_idPatente INT,
   CONSTRAINT FKRE_SL FOREIGN KEY (FK_idSupervisor_Linea) REFERENCES SUPERVISOR_LINEA (idSupervisor_Linea),
   CONSTRAINT FKRE_PC FOREIGN KEY (FK_idPatente) REFERENCES CAMION (idPatente)
);

CREATE TABLE REPARTIDOR (
   idRepartidor INT PRIMARY KEY,
   Datos_Repartidor VARCHAR(50),
   FK_idPatente INT,
   CONSTRAINT FKRPC5 FOREIGN KEY (FK_idPatente) REFERENCES CAMION (idPatente)
);

CREATE TABLE CAJA_FRUTA (
   idCaja_Fruta INT PRIMARY KEY,
   Peso_Caja INT,
   FK_idRecolector INT,
   FK_idSupervisor_Calidad INT,
   FK_idCalidad_Fruta INT,
   FK_ID_Stock INT,
   CONSTRAINT FKCF_R FOREIGN KEY (FK_idRecolector) REFERENCES RECOLECTOR (idRecolector),
   CONSTRAINT FKCF_SC FOREIGN KEY (FK_idSupervisor_Calidad) REFERENCES SUPERVISOR_CALIDAD (idSupervisor_Calidad),
   CONSTRAINT FKCF_CF FOREIGN KEY (FK_idCalidad_Fruta) REFERENCES CALIDAD_FRUTA (idCalidad_Fruta),
   CONSTRAINT FKCF_SF FOREIGN KEY (FK_ID_Stock) REFERENCES STOCK_FRUTA (ID_Stock)
);

CREATE TABLE CALIDAD_FRUTA_LOG (
    idCalidad_Fruta_Log INT PRIMARY KEY,
    Tipo_Calidad_Fruta_Log VARCHAR(30),
    FK_idCalidad_Fruta INT,
    CONSTRAINT FKCFL_CF FOREIGN KEY (FK_idCalidad_Fruta) REFERENCES CALIDAD_FRUTA (idCalidad_Fruta)
);

INSERT INTO CALIDAD_FRUTA (idCalidad_Fruta, Tipo_Calidad) VALUES (1, 'En Preparacion');

ALTER TABLE CALIDAD_FRUTA ADD ESTADO VARCHAR(30);

CREATE OR REPLACE TRIGGER CALIDAD_FRUTA
AFTER UPDATE OF ESTADO ON CALIDAD_FRUTA

FOR EACH ROW
BEGIN
     INSERT INTO CALIDAD_FRUTA_LOG(idCalidad_Fruta_Log, Tipo_Calidad_Fruta_Log, Estado)
     VALUES (:NEW.idCalidad_Fruta, SYSDATE, :OLD.Estado, :NEW.Estado, 'Buena');
END;

UPDATE TABLE CALIDAD_FRUTA SET ESTADO = BUENA WHERE idCalidad_Fruta = 1;

SELECT * FROM CALIDAD_FRUTA;
SELECT * FROM CALIDAD_FRUTA_LOG;

ALTER TABLE CALIDAD_FRUTA_LOG ADD
ESTADO VARCHAR(30);

CREATE TABLE STOCK_FRUTA_LOG (
   idStock_Fruta_Log INT PRIMARY KEY,
   Cantidad_Toneladas_Log INT,
   Dia_Stock INT,
   Descripcion VARCHAR(50),
   FK_idStock_Fruta INT,
   CONSTRAINT FKSFL_SF FOREIGN KEY (FK_idStock_Fruta) REFERENCES STOCK_FRUTA (idStock_Fruta)
);

INSERT INTO STOCK_FRUTA (idStock_Fruta, Cantidad_Toneladas) VALUES (1, 100);

ALTER TABLE STOCK_FRUTA ADD DIA_STOCK INT;
ALTER TABLE STOCK_FRUTA ADD DESCRIPCION VARCHAR(50);

CREATE OR REPLACE TRIGGER STOCK_FRUTA
AFTER UPDATE OF DIA_STOCK ON STOCK_FRUTA

FOR EACH ROW
BEGIN
     INSERT INTO STOCK_FRUTA_LOG(idStock_Fruta_Log, Cantidad_Toneladas_Log, Dia_Stock, Descripcion)
     VALUES (:NEW.idStock_Fruta, SYSDATE, :OLD.Cantidad_Toneladas, :NEW.Cantidad_Toneladas, '200', :OLD.Dia_Stock, :NEW.Dia_Stock, '2');
END;

UPDATE TABLE STOCK_FRUTA SET DIA_STOCK = '2' WHERE idStock_Fruta = 1;

SELECT * FROM STOCK_FRUTA;
SELECT * FROM STOCK_FRUTA_LOG;

CREATE USER SUPERVISOR_LINEA IDENTIFIED BY 1234;
GRANT RESOURCE, CONNECT, UNLIMITED TABLESPACE TO SUPERVISOR_LINEA;

CREATE USER SUPERVISOR_CALIDAD IDENTIFIED BY 1234;
GRANT RESOURCE, CONNECT, UNLMITED TABLESPACE TO SUPERVISOR_CALIDAD;


INSERT INTO CAJA_FRUTA (idCaja_Fruta, Peso_Caja, Fecha_Caja) VALUES (170, 30, '26/08/2021');

CREATE TABLE CAJA_FRUTA_LOG (
PEDIDO_FECHA DATE,
PEDIDO_ANTERIOR INT, 
PEDIDO_NUEVO INT
);

CREATE OR REPLACE TRIGGER CAJA_FRUTA
AFTER UPDATE OF FK_PEDIDO ON CAJA_FRUTA

FOR EACH ROW
BEGIN
      INSERT INTO CAJA_FRUTA_LOG(PEDIDO_FECHA, PEDIDO_ANTERIOR, PEDIDO_NUEVO) VALUES (SYSDATE, :OLD.FK_PEDIDO, :NEW.FK_PEDIDO, 'NUEVO');
END;

ALTER TABLE CAJA_FRUTA ADD FK_PEDIDO INT;
ALTER TABLE CAJA_FRUTA ADD FECHA_CAJA TIMESTAMP;

SELECT * FROM CAJA_FRUTA;
SELECT * FROM CAJA_FRUTA_LOG;









CREATE TABLE LOG_CONDUCTOR_CAMION (
LOG_FECHA DATE,
REPARTIDOR_ANTERIOR INT,
REPARTIDOR_NUEVO INT
);

    
CREATE TABLE PEDIDO_LOG (
PEDIDO_FECHA DATE,
ID_PEDIDO INT,
ID_SUPERVISOR INT
);